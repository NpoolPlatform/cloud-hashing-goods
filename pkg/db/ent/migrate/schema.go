// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// GoodInfosColumns holds the columns for the "good_infos" table.
	GoodInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "device_info_id", Type: field.TypeUUID},
		{Name: "gas_price", Type: field.TypeInt},
		{Name: "separate_gas_fee", Type: field.TypeBool},
		{Name: "unit_power", Type: field.TypeFloat64},
		{Name: "duration", Type: field.TypeInt},
		{Name: "coin_info_id", Type: field.TypeUUID},
		{Name: "actuals", Type: field.TypeBool},
		{Name: "delivery_time", Type: field.TypeInt},
		{Name: "inherit_from_good_id", Type: field.TypeUUID},
		{Name: "vendor_location_id", Type: field.TypeUUID},
		{Name: "price", Type: field.TypeInt},
		{Name: "benefit_type", Type: field.TypeEnum, Enums: []string{"pool", "platform"}},
		{Name: "classic", Type: field.TypeBool},
		{Name: "support_coin_type_ids", Type: field.TypeJSON},
		{Name: "reviewer_id", Type: field.TypeUUID},
		{Name: "review_state", Type: field.TypeEnum, Enums: []string{"passed", "rejected"}},
		{Name: "total", Type: field.TypeInt},
		{Name: "create_at", Type: field.TypeInt64},
		{Name: "update_at", Type: field.TypeInt64},
		{Name: "delete_at", Type: field.TypeInt64},
	}
	// GoodInfosTable holds the schema information for the "good_infos" table.
	GoodInfosTable = &schema.Table{
		Name:       "good_infos",
		Columns:    GoodInfosColumns,
		PrimaryKey: []*schema.Column{GoodInfosColumns[0]},
	}
	// TargetAreasColumns holds the columns for the "target_areas" table.
	TargetAreasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "continent", Type: field.TypeString, Size: 128, Default: ""},
		{Name: "country", Type: field.TypeString, Size: 128, Default: ""},
		{Name: "create_at", Type: field.TypeInt64},
		{Name: "update_at", Type: field.TypeInt64},
		{Name: "delete_at", Type: field.TypeInt64},
	}
	// TargetAreasTable holds the schema information for the "target_areas" table.
	TargetAreasTable = &schema.Table{
		Name:       "target_areas",
		Columns:    TargetAreasColumns,
		PrimaryKey: []*schema.Column{TargetAreasColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "targetarea_continent_country",
				Unique:  true,
				Columns: []*schema.Column{TargetAreasColumns[1], TargetAreasColumns[2]},
			},
		},
	}
	// VendorLocationsColumns holds the columns for the "vendor_locations" table.
	VendorLocationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "country", Type: field.TypeString, Size: 128},
		{Name: "province", Type: field.TypeString, Size: 128},
		{Name: "city", Type: field.TypeString, Size: 128},
		{Name: "address", Type: field.TypeString, Size: 256},
		{Name: "create_at", Type: field.TypeInt64},
		{Name: "update_at", Type: field.TypeInt64},
		{Name: "delete_at", Type: field.TypeInt64},
	}
	// VendorLocationsTable holds the schema information for the "vendor_locations" table.
	VendorLocationsTable = &schema.Table{
		Name:       "vendor_locations",
		Columns:    VendorLocationsColumns,
		PrimaryKey: []*schema.Column{VendorLocationsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "vendorlocation_country_province_city_address",
				Unique:  true,
				Columns: []*schema.Column{VendorLocationsColumns[1], VendorLocationsColumns[2], VendorLocationsColumns[3], VendorLocationsColumns[4]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		GoodInfosTable,
		TargetAreasTable,
		VendorLocationsTable,
	}
)

func init() {
}
