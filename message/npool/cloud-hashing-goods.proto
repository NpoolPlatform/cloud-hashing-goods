syntax = "proto3";

package cloud.hashing.goods.v1;

option go_package = "github.com/NpoolPlatform/cloud-hashing-goods/message/npool";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

// Cloud Hashing Goods
service CloudHashingGoods {
    rpc Version (google.protobuf.Empty) returns (VersionResponse){
        option (google.api.http) = {
            get: "/version"
        };
    }

    rpc CreateVendorLocation(CreateVendorLocationRequest) returns (CreateVendorLocationResponse) {
        option (google.api.http) = {
            post: "/v1/create/vendor-location"
            body: "*"
        };
    }
    rpc UpdateVendorLocation(UpdateVendorLocationRequest) returns (UpdateVendorLocationResponse) {
        option (google.api.http) = {
            post: "/v1/update/vendor-location"
            body: "*"
        };
    }
    rpc GetVendorLocations(GetVendorLocationsRequest) returns (GetVendorLocationsResponse) {
        option (google.api.http) = {
            get: "/v1/get/vendor-locations"
        };
    }

    rpc CreateTargetArea(CreateTargetAreaRequest) returns (CreateTargetAreaResponse) {
        option (google.api.http) = {
            post: "/v1/create/target-area"
            body: "*"
        };
    }
    rpc UpdateTargetArea(UpdateTargetAreaRequest) returns (UpdateTargetAreaResponse) {
        option (google.api.http) = {
            post: "/v1/update/target-area"
            body: "*"
        };
    }
    rpc GetTargetAreas(GetTargetAreasRequest) returns (GetTargetAreasResponse) {
        option (google.api.http) = {
            get: "/v1/get/target-areas"
        };
    }

    rpc CreateDeviceInfo(CreateDeviceInfoRequest) returns (CreateDeviceInfoResponse) {
        option (google.api.http) = {
            post: "/v1/create/device"
            body: "*"
        };
    }
    rpc UpdateDeviceInfo(UpdateDeviceInfoRequest) returns (UpdateDeviceInfoResponse) {
        option (google.api.http) = {
            post: "/v1/update/device"
            body: "*"
        };
    }
    rpc GetDeviceInfos(GetDeviceInfosRequest) returns (GetDeviceInfosResponse) {
        option (google.api.http) = {
            get: "/v1/get/devices"
        };
    }

    rpc CreateGood(CreateGoodRequest) returns (CreateGoodResponse) {
        option (google.api.http) = {
            post: "/v1/create/good"
            body: "*"
        };
    }
    rpc UpdateGood(UpdateGoodRequest) returns (UpdateGoodResponse) {
        option (google.api.http) = {
            post: "/v1/update/good"
            body: "*"
        };
    }
    // Can only accessed by APP administrator and platform administrator
    rpc GetAllGoods(GetAllGoodsRequest) returns (GetAllGoodsResponse) {
        option (google.api.http) = {
            get: "/v1/get/all-goods"
        };
    }
    // Accessed by APP user
    rpc GetGoods(GetGoodsRequest) returns (GetGoodsResponse) {
        option (google.api.http) = {
            get: "/v1/get/goods"
        };
    }

    rpc SetAppGoodPrice(SetAppGoodPriceRequest) returns (SetAppGoodPriceResponse) {
        option (google.api.http) = {
            post: "/v1/set/app/good/price"
            body: "*"
        };
    }

    rpc AuthorizeAppGood(AuthorizeAppGoodRequest) returns (AuthorizeAppGoodResponse) {
        option (google.api.http) = {
            post: "/v1/authorize/app/good"
            body: "*"
        };
    }
    rpc UnauthorizeAppGood(UnauthorizeAppGoodRequest) returns (UnauthorizeAppGoodResponse) {
        option (google.api.http) = {
            post: "/v1/unauthorize/app/good"
            body: "*"
        };
    }

    rpc AuthorizeAppTargetArea(AuthorizeAppTargetAreaRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/authorize/app/target-area"
            body: "*"
        };
    }
    rpc UnauthorizeAppTargetArea(UnauthorizeAppTargetAreaRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/unauthorize/app/target-area"
            body: "*"
        };
    }

    rpc AuthorizeAppGoodTargetArea(AuthorizeAppGoodTargetAreaRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/authorize/app/good/target-area"
            body: "*"
        };
    }
    rpc UnauthorizeAppGoodTargetArea(UnauthorizeAppGoodTargetAreaRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/unauthorize/app/good/target-area"
            body: "*"
        };
    }
}

message PageInfo {
    int32 PageIndex = 100;
    int32 PageSize = 101;
}

// Request body and response
message VersionResponse {
    string Info = 200;
}

message VendorLocationInfo {
    string ID = 300;
    string Country = 301;
    string Province = 302;
    string City = 303;
    string Address = 304;
}

message CreateVendorLocationRequest {
    VendorLocationInfo Info = 400;
}

message CreateVendorLocationResponse {
    VendorLocationInfo Info = 500;
}

message UpdateVendorLocationRequest {
    VendorLocationInfo Info = 600;
}

message UpdateVendorLocationResponse {
    VendorLocationInfo Info = 700;
}

message GetVendorLocationsRequest {
    PageInfo PageInfo = 800;
}

message GetVendorLocationsResponse {
    repeated VendorLocationInfo Infos = 900;
    int32 Total = 901;
}

message TargetAreaInfo {
    string ID = 1000;
    string Continent = 1001;
    string Country = 1002;
}

message CreateTargetAreaRequest {
    TargetAreaInfo Info = 1100;
}

message CreateTargetAreaResponse {
    TargetAreaInfo Info = 1200;
}

message UpdateTargetAreaRequest {
    TargetAreaInfo Info = 1300;
}

message UpdateTargetAreaResponse {
    TargetAreaInfo Info = 1400;
}

message GetTargetAreasRequest {
    PageInfo PageInfo = 1500;
}

message GetTargetAreasResponse {
    repeated TargetAreaInfo Infos = 1600;
    int32 Total = 1501;
}

message DeviceInfo {
    string ID = 1700;
    string Type = 1701;
    string Manufacturer = 1702;
    float PowerComsuption = 1703;
    int64 ShipmentTimestamp = 1704;
}

message CreateDeviceInfoRequest {
    DeviceInfo Info = 1800;
}

message CreateDeviceInfoResponse {
    DeviceInfo Info = 1900;
}

message UpdateDeviceInfoRequest {
    DeviceInfo Info = 2000;
}

message UpdateDeviceInfoResponse {
    DeviceInfo Info = 2100;
}

message GetDeviceInfosRequest {
    PageInfo PageInfo = 2200;
}

message GetDeviceInfosResponse {
    repeated DeviceInfo Infos = 2300;
    int32 Total = 2301;
}

message GoodInfo {
    string ID = 2400;
    string DeviceInfoID = 2401;
    float GasPrice = 2402;
    bool SeparateGasFee = 2403;
    float UnitPower = 2404;
    int32 DurationDays = 2405;
    string CoinInfoID = 2406;
    bool Actuals = 2407;
    int64 DeliveryTimestamp = 2408;
    string InheritFromGoodID = 2409;
    string VendorLocationID = 2410;
    float Price = 2411;
    string BenefitType = 2412;
    bool Classic = 2413;
    repeated string SupportCoinTypeIDs = 2414;
    int32 Total = 2415;
}

message CreateGoodRequest {
    GoodInfo Info = 2500;
}

message CreateGoodResponse {
    GoodInfo Info = 2600;
}

message UpdateGoodRequest {
    GoodInfo Info = 2700;
}

message UpdateGoodResponse {
    GoodInfo Info = 2800;
}

message GetAllGoodsRequest {
    string AppID = 2900;
    PageInfo PageInfo = 2901;
}

message GoodAuthInfo {
    GoodInfo Info = 3000;
    bool AppAuthorized = 3001;
}

message GetAllGoodsResponse {
    repeated GoodAuthInfo Infos = 3100;
    int32 Total = 3101;
}

message GetGoodsRequest {
    string AppID = 3200;
    PageInfo PageInfo = 3201;
}

message GetGoodsResponse {
    repeated GoodInfo Infos = 3300;
    int32 Total = 3301;
}

message GoodPrice {
    float Price = 3400;
    float GasPrice = 3401;
}

message SetAppGoodPriceRequest {
    string GoodID = 3500;
    GoodPrice GoodPrice = 3501;
}

message SetAppGoodPriceResponse {
    GoodPrice GoodPrice = 3600;
    GoodInfo GoodInfo = 3601;
}

message AuthorizeAppGoodRequest {
    string AppID = 3700;
    string GoodID = 3701;
    bool AuthorizeAllTargetArea = 3702;
}

message AuthorizeAppGoodResponse {
    GoodAuthInfo Info = 3800;
}

message UnauthorizeAppGoodRequest {
    string AppID = 3900;
    string GoodID = 3901;
}

message UnauthorizeAppGoodResponse {
    GoodAuthInfo Info = 4000;
}

message AuthorizeAppTargetAreaRequest {
    string AppID = 4100;
    string TargetAreaID = 4101;
}

message UnauthorizeAppTargetAreaRequest {
    string AppID = 4100;
    string TargetAreaID = 4101;
}

message AuthorizeAppGoodTargetAreaRequest {
    string AppID = 4200;
    string GoodID = 4201;
    string TargetAreaID = 4202;
}

message UnauthorizeAppGoodTargetAreaRequest {
    string AppID = 4300;
    string GoodID = 4301;
    string TargetAreaID = 4302;
}
