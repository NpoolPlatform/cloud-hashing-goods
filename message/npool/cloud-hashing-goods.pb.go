// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/cloud-hashing-goods.proto

package npool

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request body and response
type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,100,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{0}
}

func (x *VersionResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type VendorLocationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       string `protobuf:"bytes,200,opt,name=ID,proto3" json:"ID,omitempty"`
	Country  string `protobuf:"bytes,201,opt,name=Country,proto3" json:"Country,omitempty"`
	Province string `protobuf:"bytes,202,opt,name=Province,proto3" json:"Province,omitempty"`
	City     string `protobuf:"bytes,203,opt,name=City,proto3" json:"City,omitempty"`
	Address  string `protobuf:"bytes,204,opt,name=Address,proto3" json:"Address,omitempty"`
}

func (x *VendorLocationInfo) Reset() {
	*x = VendorLocationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VendorLocationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorLocationInfo) ProtoMessage() {}

func (x *VendorLocationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorLocationInfo.ProtoReflect.Descriptor instead.
func (*VendorLocationInfo) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{1}
}

func (x *VendorLocationInfo) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *VendorLocationInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *VendorLocationInfo) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *VendorLocationInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *VendorLocationInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type CreateVendorLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *VendorLocationInfo `protobuf:"bytes,300,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateVendorLocationRequest) Reset() {
	*x = CreateVendorLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVendorLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVendorLocationRequest) ProtoMessage() {}

func (x *CreateVendorLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVendorLocationRequest.ProtoReflect.Descriptor instead.
func (*CreateVendorLocationRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{2}
}

func (x *CreateVendorLocationRequest) GetInfo() *VendorLocationInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateVendorLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *VendorLocationInfo `protobuf:"bytes,400,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateVendorLocationResponse) Reset() {
	*x = CreateVendorLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVendorLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVendorLocationResponse) ProtoMessage() {}

func (x *CreateVendorLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVendorLocationResponse.ProtoReflect.Descriptor instead.
func (*CreateVendorLocationResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{3}
}

func (x *CreateVendorLocationResponse) GetInfo() *VendorLocationInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateVendorLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *VendorLocationInfo `protobuf:"bytes,500,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateVendorLocationRequest) Reset() {
	*x = UpdateVendorLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVendorLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVendorLocationRequest) ProtoMessage() {}

func (x *UpdateVendorLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVendorLocationRequest.ProtoReflect.Descriptor instead.
func (*UpdateVendorLocationRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateVendorLocationRequest) GetInfo() *VendorLocationInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateVendorLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *VendorLocationInfo `protobuf:"bytes,600,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateVendorLocationResponse) Reset() {
	*x = UpdateVendorLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVendorLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVendorLocationResponse) ProtoMessage() {}

func (x *UpdateVendorLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVendorLocationResponse.ProtoReflect.Descriptor instead.
func (*UpdateVendorLocationResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateVendorLocationResponse) GetInfo() *VendorLocationInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetVendorLocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*VendorLocationInfo `protobuf:"bytes,700,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetVendorLocationsResponse) Reset() {
	*x = GetVendorLocationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVendorLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVendorLocationsResponse) ProtoMessage() {}

func (x *GetVendorLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVendorLocationsResponse.ProtoReflect.Descriptor instead.
func (*GetVendorLocationsResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{6}
}

func (x *GetVendorLocationsResponse) GetInfos() []*VendorLocationInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type TargetAreaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,800,opt,name=ID,proto3" json:"ID,omitempty"`
	Continent string `protobuf:"bytes,801,opt,name=Continent,proto3" json:"Continent,omitempty"`
	Country   string `protobuf:"bytes,802,opt,name=Country,proto3" json:"Country,omitempty"`
}

func (x *TargetAreaInfo) Reset() {
	*x = TargetAreaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetAreaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetAreaInfo) ProtoMessage() {}

func (x *TargetAreaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetAreaInfo.ProtoReflect.Descriptor instead.
func (*TargetAreaInfo) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{7}
}

func (x *TargetAreaInfo) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *TargetAreaInfo) GetContinent() string {
	if x != nil {
		return x.Continent
	}
	return ""
}

func (x *TargetAreaInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type CreateTargetAreaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TargetAreaInfo `protobuf:"bytes,900,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTargetAreaRequest) Reset() {
	*x = CreateTargetAreaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTargetAreaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTargetAreaRequest) ProtoMessage() {}

func (x *CreateTargetAreaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTargetAreaRequest.ProtoReflect.Descriptor instead.
func (*CreateTargetAreaRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{8}
}

func (x *CreateTargetAreaRequest) GetInfo() *TargetAreaInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateTargetAreaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TargetAreaInfo `protobuf:"bytes,1000,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTargetAreaResponse) Reset() {
	*x = CreateTargetAreaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTargetAreaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTargetAreaResponse) ProtoMessage() {}

func (x *CreateTargetAreaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTargetAreaResponse.ProtoReflect.Descriptor instead.
func (*CreateTargetAreaResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{9}
}

func (x *CreateTargetAreaResponse) GetInfo() *TargetAreaInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateTargetAreaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TargetAreaInfo `protobuf:"bytes,900,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTargetAreaRequest) Reset() {
	*x = UpdateTargetAreaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTargetAreaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTargetAreaRequest) ProtoMessage() {}

func (x *UpdateTargetAreaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTargetAreaRequest.ProtoReflect.Descriptor instead.
func (*UpdateTargetAreaRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateTargetAreaRequest) GetInfo() *TargetAreaInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateTargetAreaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TargetAreaInfo `protobuf:"bytes,1000,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTargetAreaResponse) Reset() {
	*x = UpdateTargetAreaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTargetAreaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTargetAreaResponse) ProtoMessage() {}

func (x *UpdateTargetAreaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTargetAreaResponse.ProtoReflect.Descriptor instead.
func (*UpdateTargetAreaResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateTargetAreaResponse) GetInfo() *TargetAreaInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetTargetAreasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*TargetAreaInfo `protobuf:"bytes,1100,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetTargetAreasResponse) Reset() {
	*x = GetTargetAreasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTargetAreasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTargetAreasResponse) ProtoMessage() {}

func (x *GetTargetAreasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTargetAreasResponse.ProtoReflect.Descriptor instead.
func (*GetTargetAreasResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{12}
}

func (x *GetTargetAreasResponse) GetInfos() []*TargetAreaInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type DeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                string  `protobuf:"bytes,1200,opt,name=ID,proto3" json:"ID,omitempty"`
	Type              string  `protobuf:"bytes,1201,opt,name=Type,proto3" json:"Type,omitempty"`
	Manufacturer      string  `protobuf:"bytes,1202,opt,name=Manufacturer,proto3" json:"Manufacturer,omitempty"`
	PowerComsuption   float32 `protobuf:"fixed32,1203,opt,name=PowerComsuption,proto3" json:"PowerComsuption,omitempty"`
	ShipmentTimestamp int64   `protobuf:"varint,1204,opt,name=ShipmentTimestamp,proto3" json:"ShipmentTimestamp,omitempty"`
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{13}
}

func (x *DeviceInfo) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *DeviceInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DeviceInfo) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *DeviceInfo) GetPowerComsuption() float32 {
	if x != nil {
		return x.PowerComsuption
	}
	return 0
}

func (x *DeviceInfo) GetShipmentTimestamp() int64 {
	if x != nil {
		return x.ShipmentTimestamp
	}
	return 0
}

type CreateDeviceInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *DeviceInfo `protobuf:"bytes,1300,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateDeviceInfoRequest) Reset() {
	*x = CreateDeviceInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceInfoRequest) ProtoMessage() {}

func (x *CreateDeviceInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceInfoRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceInfoRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{14}
}

func (x *CreateDeviceInfoRequest) GetInfo() *DeviceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateDeviceInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *DeviceInfo `protobuf:"bytes,1400,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateDeviceInfoResponse) Reset() {
	*x = CreateDeviceInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceInfoResponse) ProtoMessage() {}

func (x *CreateDeviceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceInfoResponse.ProtoReflect.Descriptor instead.
func (*CreateDeviceInfoResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{15}
}

func (x *CreateDeviceInfoResponse) GetInfo() *DeviceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateDeviceInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *DeviceInfo `protobuf:"bytes,1500,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateDeviceInfoRequest) Reset() {
	*x = UpdateDeviceInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceInfoRequest) ProtoMessage() {}

func (x *UpdateDeviceInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceInfoRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateDeviceInfoRequest) GetInfo() *DeviceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateDeviceInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *DeviceInfo `protobuf:"bytes,1600,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateDeviceInfoResponse) Reset() {
	*x = UpdateDeviceInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceInfoResponse) ProtoMessage() {}

func (x *UpdateDeviceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceInfoResponse.ProtoReflect.Descriptor instead.
func (*UpdateDeviceInfoResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateDeviceInfoResponse) GetInfo() *DeviceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetDeviceInfosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*DeviceInfo `protobuf:"bytes,1700,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetDeviceInfosResponse) Reset() {
	*x = GetDeviceInfosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceInfosResponse) ProtoMessage() {}

func (x *GetDeviceInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceInfosResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceInfosResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{18}
}

func (x *GetDeviceInfosResponse) GetInfos() []*DeviceInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GoodInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                 string   `protobuf:"bytes,1800,opt,name=ID,proto3" json:"ID,omitempty"`
	DeviceInfoID       string   `protobuf:"bytes,1801,opt,name=DeviceInfoID,proto3" json:"DeviceInfoID,omitempty"`
	GasPrice           float32  `protobuf:"fixed32,1802,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	SeparateGasFee     bool     `protobuf:"varint,1803,opt,name=SeparateGasFee,proto3" json:"SeparateGasFee,omitempty"`
	UnitPower          float32  `protobuf:"fixed32,1804,opt,name=UnitPower,proto3" json:"UnitPower,omitempty"`
	DurationDays       int32    `protobuf:"varint,1805,opt,name=DurationDays,proto3" json:"DurationDays,omitempty"`
	CoinInfoID         string   `protobuf:"bytes,1806,opt,name=CoinInfoID,proto3" json:"CoinInfoID,omitempty"`
	Actuals            bool     `protobuf:"varint,1807,opt,name=Actuals,proto3" json:"Actuals,omitempty"`
	DeliveryTimestamp  int64    `protobuf:"varint,1808,opt,name=DeliveryTimestamp,proto3" json:"DeliveryTimestamp,omitempty"`
	InheritFromGoodID  string   `protobuf:"bytes,1809,opt,name=InheritFromGoodID,proto3" json:"InheritFromGoodID,omitempty"`
	VendorLocationID   string   `protobuf:"bytes,1810,opt,name=VendorLocationID,proto3" json:"VendorLocationID,omitempty"`
	Price              float32  `protobuf:"fixed32,1811,opt,name=Price,proto3" json:"Price,omitempty"`
	BenefitType        string   `protobuf:"bytes,1812,opt,name=BenefitType,proto3" json:"BenefitType,omitempty"`
	Classic            bool     `protobuf:"varint,1813,opt,name=Classic,proto3" json:"Classic,omitempty"`
	SupportCoinTypeIDs []string `protobuf:"bytes,1814,rep,name=SupportCoinTypeIDs,proto3" json:"SupportCoinTypeIDs,omitempty"`
	Total              int32    `protobuf:"varint,1815,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GoodInfo) Reset() {
	*x = GoodInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodInfo) ProtoMessage() {}

func (x *GoodInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodInfo.ProtoReflect.Descriptor instead.
func (*GoodInfo) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{19}
}

func (x *GoodInfo) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *GoodInfo) GetDeviceInfoID() string {
	if x != nil {
		return x.DeviceInfoID
	}
	return ""
}

func (x *GoodInfo) GetGasPrice() float32 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *GoodInfo) GetSeparateGasFee() bool {
	if x != nil {
		return x.SeparateGasFee
	}
	return false
}

func (x *GoodInfo) GetUnitPower() float32 {
	if x != nil {
		return x.UnitPower
	}
	return 0
}

func (x *GoodInfo) GetDurationDays() int32 {
	if x != nil {
		return x.DurationDays
	}
	return 0
}

func (x *GoodInfo) GetCoinInfoID() string {
	if x != nil {
		return x.CoinInfoID
	}
	return ""
}

func (x *GoodInfo) GetActuals() bool {
	if x != nil {
		return x.Actuals
	}
	return false
}

func (x *GoodInfo) GetDeliveryTimestamp() int64 {
	if x != nil {
		return x.DeliveryTimestamp
	}
	return 0
}

func (x *GoodInfo) GetInheritFromGoodID() string {
	if x != nil {
		return x.InheritFromGoodID
	}
	return ""
}

func (x *GoodInfo) GetVendorLocationID() string {
	if x != nil {
		return x.VendorLocationID
	}
	return ""
}

func (x *GoodInfo) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GoodInfo) GetBenefitType() string {
	if x != nil {
		return x.BenefitType
	}
	return ""
}

func (x *GoodInfo) GetClassic() bool {
	if x != nil {
		return x.Classic
	}
	return false
}

func (x *GoodInfo) GetSupportCoinTypeIDs() []string {
	if x != nil {
		return x.SupportCoinTypeIDs
	}
	return nil
}

func (x *GoodInfo) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GoodInfo `protobuf:"bytes,1900,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateGoodRequest) Reset() {
	*x = CreateGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGoodRequest) ProtoMessage() {}

func (x *CreateGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGoodRequest.ProtoReflect.Descriptor instead.
func (*CreateGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{20}
}

func (x *CreateGoodRequest) GetInfo() *GoodInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GoodInfo `protobuf:"bytes,2000,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateGoodResponse) Reset() {
	*x = CreateGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGoodResponse) ProtoMessage() {}

func (x *CreateGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGoodResponse.ProtoReflect.Descriptor instead.
func (*CreateGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{21}
}

func (x *CreateGoodResponse) GetInfo() *GoodInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateGoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GoodInfo `protobuf:"bytes,2100,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateGoodRequest) Reset() {
	*x = UpdateGoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGoodRequest) ProtoMessage() {}

func (x *UpdateGoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGoodRequest.ProtoReflect.Descriptor instead.
func (*UpdateGoodRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateGoodRequest) GetInfo() *GoodInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateGoodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GoodInfo `protobuf:"bytes,2200,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateGoodResponse) Reset() {
	*x = UpdateGoodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGoodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGoodResponse) ProtoMessage() {}

func (x *UpdateGoodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGoodResponse.ProtoReflect.Descriptor instead.
func (*UpdateGoodResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateGoodResponse) GetInfo() *GoodInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetAllGoodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,2300,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *GetAllGoodsRequest) Reset() {
	*x = GetAllGoodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGoodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGoodsRequest) ProtoMessage() {}

func (x *GetAllGoodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGoodsRequest.ProtoReflect.Descriptor instead.
func (*GetAllGoodsRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{24}
}

func (x *GetAllGoodsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type GoodAuthInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info          *GoodInfo `protobuf:"bytes,2400,opt,name=Info,proto3" json:"Info,omitempty"`
	AppAuthorized bool      `protobuf:"varint,2401,opt,name=AppAuthorized,proto3" json:"AppAuthorized,omitempty"`
}

func (x *GoodAuthInfo) Reset() {
	*x = GoodAuthInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodAuthInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodAuthInfo) ProtoMessage() {}

func (x *GoodAuthInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodAuthInfo.ProtoReflect.Descriptor instead.
func (*GoodAuthInfo) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{25}
}

func (x *GoodAuthInfo) GetInfo() *GoodInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GoodAuthInfo) GetAppAuthorized() bool {
	if x != nil {
		return x.AppAuthorized
	}
	return false
}

type GetAllGoodsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*GoodAuthInfo `protobuf:"bytes,2500,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetAllGoodsResponse) Reset() {
	*x = GetAllGoodsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGoodsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGoodsResponse) ProtoMessage() {}

func (x *GetAllGoodsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGoodsResponse.ProtoReflect.Descriptor instead.
func (*GetAllGoodsResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{26}
}

func (x *GetAllGoodsResponse) GetInfos() []*GoodAuthInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetGoodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,2600,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *GetGoodsRequest) Reset() {
	*x = GetGoodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodsRequest) ProtoMessage() {}

func (x *GetGoodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodsRequest.ProtoReflect.Descriptor instead.
func (*GetGoodsRequest) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{27}
}

func (x *GetGoodsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type GetGoodsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*GoodInfo `protobuf:"bytes,2700,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetGoodsResponse) Reset() {
	*x = GetGoodsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_cloud_hashing_goods_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGoodsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGoodsResponse) ProtoMessage() {}

func (x *GetGoodsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_cloud_hashing_goods_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGoodsResponse.ProtoReflect.Descriptor instead.
func (*GetGoodsResponse) Descriptor() ([]byte, []int) {
	return file_npool_cloud_hashing_goods_proto_rawDescGZIP(), []int{28}
}

func (x *GetGoodsResponse) GetInfos() []*GoodInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

var File_npool_cloud_hashing_goods_proto protoreflect.FileDescriptor

var file_npool_cloud_hashing_goods_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2d, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x16, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x25, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x12,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0f, 0x0a, 0x02, 0x49, 0x44, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0xc9,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1b,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x13, 0x0a, 0x04, 0x43,
	0x69, 0x74, 0x79, 0x18, 0xcb, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69, 0x74, 0x79,
	0x12, 0x19, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0xcc, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x5e, 0x0a, 0x1b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5f, 0x0a, 0x1c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5e, 0x0a, 0x1b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5f, 0x0a, 0x1c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0xd8, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5f, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0xbc, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x5b,
	0x0a, 0x0e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0f, 0x0a, 0x02, 0x49, 0x44, 0x18, 0xa0, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x1d, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0xa1,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x19, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0xa2, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x56, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x84,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x57, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3b, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x84, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x57, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41,
	0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x57, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0xcc, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0f, 0x0a, 0x02, 0x49, 0x44, 0x18, 0xb0, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x13, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0xb1,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x4d,
	0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0xb2, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72,
	0x12, 0x29, 0x0a, 0x0f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x73, 0x75, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0xb3, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x73, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x11, 0x53,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0xb4, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x52, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x94, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x53,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0xf8, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x52, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xdc, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x53, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xc0, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x53, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0xa4, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0xae, 0x04, 0x0a, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0f,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x88, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x23, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x18,
	0x89, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x8a, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x27, 0x0a, 0x0e, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73,
	0x46, 0x65, 0x65, 0x18, 0x8b, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x53, 0x65, 0x70, 0x61,
	0x72, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x6e,
	0x69, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x8c, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09,
	0x55, 0x6e, 0x69, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0c, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x18, 0x8d, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x1f,
	0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x18, 0x8e, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x12,
	0x19, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x73, 0x18, 0x8f, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x73, 0x12, 0x2d, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x90, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2d, 0x0a, 0x11, 0x49, 0x6e, 0x68,
	0x65, 0x72, 0x69, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x91,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x49, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x46, 0x72,
	0x6f, 0x6d, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x10, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x92, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x15, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x93,
	0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0b,
	0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x94, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x07, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x18, 0x95, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x12, 0x2f, 0x0a, 0x12, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x73,
	0x18, 0x96, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x73, 0x12, 0x15, 0x0a, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x97, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x4a, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0xec, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4b,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xd0, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xb4, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x98, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x18, 0xfc, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x22, 0x6c, 0x0a, 0x0c, 0x47, 0x6f, 0x6f, 0x64, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xe0, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0xe1, 0x12, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x41, 0x70, 0x70, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x22,
	0x52, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0xc4, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x6f, 0x6f, 0x64, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x22, 0x28, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0xa8, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x4b, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x8c, 0x15, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x32, 0xc6, 0x0e, 0x0a, 0x11, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x12, 0x5c, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0xa1,
	0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x2d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a,
	0x01, 0x2a, 0x12, 0xa1, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x32, 0x13,
	0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x2d, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x7e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x32, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16,
	0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x2d, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x91, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x12, 0x2f, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x2d, 0x61, 0x72, 0x65, 0x61, 0x3a, 0x01, 0x2a, 0x12, 0x91, 0x01, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x12,
	0x2f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x32, 0x0f, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2d, 0x61, 0x72, 0x65, 0x61, 0x3a, 0x01, 0x2a, 0x12, 0x72,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12,
	0x12, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2d, 0x61, 0x72, 0x65,
	0x61, 0x73, 0x12, 0x8c, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0f, 0x22, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x01,
	0x2a, 0x12, 0x8c, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0f, 0x32, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x01, 0x2a,
	0x12, 0x6c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2e, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x78,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x29, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x08, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x78, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x32, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x3a,
	0x01, 0x2a, 0x12, 0x7d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x12, 0x2a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x6c, 0x2d, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x12, 0x70, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x27, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2d, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f,
	0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_cloud_hashing_goods_proto_rawDescOnce sync.Once
	file_npool_cloud_hashing_goods_proto_rawDescData = file_npool_cloud_hashing_goods_proto_rawDesc
)

func file_npool_cloud_hashing_goods_proto_rawDescGZIP() []byte {
	file_npool_cloud_hashing_goods_proto_rawDescOnce.Do(func() {
		file_npool_cloud_hashing_goods_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_cloud_hashing_goods_proto_rawDescData)
	})
	return file_npool_cloud_hashing_goods_proto_rawDescData
}

var file_npool_cloud_hashing_goods_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_npool_cloud_hashing_goods_proto_goTypes = []interface{}{
	(*VersionResponse)(nil),              // 0: cloud.hashing.goods.v1.VersionResponse
	(*VendorLocationInfo)(nil),           // 1: cloud.hashing.goods.v1.VendorLocationInfo
	(*CreateVendorLocationRequest)(nil),  // 2: cloud.hashing.goods.v1.CreateVendorLocationRequest
	(*CreateVendorLocationResponse)(nil), // 3: cloud.hashing.goods.v1.CreateVendorLocationResponse
	(*UpdateVendorLocationRequest)(nil),  // 4: cloud.hashing.goods.v1.UpdateVendorLocationRequest
	(*UpdateVendorLocationResponse)(nil), // 5: cloud.hashing.goods.v1.UpdateVendorLocationResponse
	(*GetVendorLocationsResponse)(nil),   // 6: cloud.hashing.goods.v1.GetVendorLocationsResponse
	(*TargetAreaInfo)(nil),               // 7: cloud.hashing.goods.v1.TargetAreaInfo
	(*CreateTargetAreaRequest)(nil),      // 8: cloud.hashing.goods.v1.CreateTargetAreaRequest
	(*CreateTargetAreaResponse)(nil),     // 9: cloud.hashing.goods.v1.CreateTargetAreaResponse
	(*UpdateTargetAreaRequest)(nil),      // 10: cloud.hashing.goods.v1.UpdateTargetAreaRequest
	(*UpdateTargetAreaResponse)(nil),     // 11: cloud.hashing.goods.v1.UpdateTargetAreaResponse
	(*GetTargetAreasResponse)(nil),       // 12: cloud.hashing.goods.v1.GetTargetAreasResponse
	(*DeviceInfo)(nil),                   // 13: cloud.hashing.goods.v1.DeviceInfo
	(*CreateDeviceInfoRequest)(nil),      // 14: cloud.hashing.goods.v1.CreateDeviceInfoRequest
	(*CreateDeviceInfoResponse)(nil),     // 15: cloud.hashing.goods.v1.CreateDeviceInfoResponse
	(*UpdateDeviceInfoRequest)(nil),      // 16: cloud.hashing.goods.v1.UpdateDeviceInfoRequest
	(*UpdateDeviceInfoResponse)(nil),     // 17: cloud.hashing.goods.v1.UpdateDeviceInfoResponse
	(*GetDeviceInfosResponse)(nil),       // 18: cloud.hashing.goods.v1.GetDeviceInfosResponse
	(*GoodInfo)(nil),                     // 19: cloud.hashing.goods.v1.GoodInfo
	(*CreateGoodRequest)(nil),            // 20: cloud.hashing.goods.v1.CreateGoodRequest
	(*CreateGoodResponse)(nil),           // 21: cloud.hashing.goods.v1.CreateGoodResponse
	(*UpdateGoodRequest)(nil),            // 22: cloud.hashing.goods.v1.UpdateGoodRequest
	(*UpdateGoodResponse)(nil),           // 23: cloud.hashing.goods.v1.UpdateGoodResponse
	(*GetAllGoodsRequest)(nil),           // 24: cloud.hashing.goods.v1.GetAllGoodsRequest
	(*GoodAuthInfo)(nil),                 // 25: cloud.hashing.goods.v1.GoodAuthInfo
	(*GetAllGoodsResponse)(nil),          // 26: cloud.hashing.goods.v1.GetAllGoodsResponse
	(*GetGoodsRequest)(nil),              // 27: cloud.hashing.goods.v1.GetGoodsRequest
	(*GetGoodsResponse)(nil),             // 28: cloud.hashing.goods.v1.GetGoodsResponse
	(*emptypb.Empty)(nil),                // 29: google.protobuf.Empty
}
var file_npool_cloud_hashing_goods_proto_depIdxs = []int32{
	1,  // 0: cloud.hashing.goods.v1.CreateVendorLocationRequest.Info:type_name -> cloud.hashing.goods.v1.VendorLocationInfo
	1,  // 1: cloud.hashing.goods.v1.CreateVendorLocationResponse.Info:type_name -> cloud.hashing.goods.v1.VendorLocationInfo
	1,  // 2: cloud.hashing.goods.v1.UpdateVendorLocationRequest.Info:type_name -> cloud.hashing.goods.v1.VendorLocationInfo
	1,  // 3: cloud.hashing.goods.v1.UpdateVendorLocationResponse.Info:type_name -> cloud.hashing.goods.v1.VendorLocationInfo
	1,  // 4: cloud.hashing.goods.v1.GetVendorLocationsResponse.Infos:type_name -> cloud.hashing.goods.v1.VendorLocationInfo
	7,  // 5: cloud.hashing.goods.v1.CreateTargetAreaRequest.Info:type_name -> cloud.hashing.goods.v1.TargetAreaInfo
	7,  // 6: cloud.hashing.goods.v1.CreateTargetAreaResponse.Info:type_name -> cloud.hashing.goods.v1.TargetAreaInfo
	7,  // 7: cloud.hashing.goods.v1.UpdateTargetAreaRequest.Info:type_name -> cloud.hashing.goods.v1.TargetAreaInfo
	7,  // 8: cloud.hashing.goods.v1.UpdateTargetAreaResponse.Info:type_name -> cloud.hashing.goods.v1.TargetAreaInfo
	7,  // 9: cloud.hashing.goods.v1.GetTargetAreasResponse.Infos:type_name -> cloud.hashing.goods.v1.TargetAreaInfo
	13, // 10: cloud.hashing.goods.v1.CreateDeviceInfoRequest.Info:type_name -> cloud.hashing.goods.v1.DeviceInfo
	13, // 11: cloud.hashing.goods.v1.CreateDeviceInfoResponse.Info:type_name -> cloud.hashing.goods.v1.DeviceInfo
	13, // 12: cloud.hashing.goods.v1.UpdateDeviceInfoRequest.Info:type_name -> cloud.hashing.goods.v1.DeviceInfo
	13, // 13: cloud.hashing.goods.v1.UpdateDeviceInfoResponse.Info:type_name -> cloud.hashing.goods.v1.DeviceInfo
	13, // 14: cloud.hashing.goods.v1.GetDeviceInfosResponse.Infos:type_name -> cloud.hashing.goods.v1.DeviceInfo
	19, // 15: cloud.hashing.goods.v1.CreateGoodRequest.Info:type_name -> cloud.hashing.goods.v1.GoodInfo
	19, // 16: cloud.hashing.goods.v1.CreateGoodResponse.Info:type_name -> cloud.hashing.goods.v1.GoodInfo
	19, // 17: cloud.hashing.goods.v1.UpdateGoodRequest.Info:type_name -> cloud.hashing.goods.v1.GoodInfo
	19, // 18: cloud.hashing.goods.v1.UpdateGoodResponse.Info:type_name -> cloud.hashing.goods.v1.GoodInfo
	19, // 19: cloud.hashing.goods.v1.GoodAuthInfo.Info:type_name -> cloud.hashing.goods.v1.GoodInfo
	25, // 20: cloud.hashing.goods.v1.GetAllGoodsResponse.Infos:type_name -> cloud.hashing.goods.v1.GoodAuthInfo
	19, // 21: cloud.hashing.goods.v1.GetGoodsResponse.Infos:type_name -> cloud.hashing.goods.v1.GoodInfo
	29, // 22: cloud.hashing.goods.v1.CloudHashingGoods.Version:input_type -> google.protobuf.Empty
	2,  // 23: cloud.hashing.goods.v1.CloudHashingGoods.CreateVendorLocation:input_type -> cloud.hashing.goods.v1.CreateVendorLocationRequest
	4,  // 24: cloud.hashing.goods.v1.CloudHashingGoods.UpdateVendorLocation:input_type -> cloud.hashing.goods.v1.UpdateVendorLocationRequest
	29, // 25: cloud.hashing.goods.v1.CloudHashingGoods.GetVendorLocations:input_type -> google.protobuf.Empty
	8,  // 26: cloud.hashing.goods.v1.CloudHashingGoods.CreateTargetArea:input_type -> cloud.hashing.goods.v1.CreateTargetAreaRequest
	10, // 27: cloud.hashing.goods.v1.CloudHashingGoods.UpdateTargetArea:input_type -> cloud.hashing.goods.v1.UpdateTargetAreaRequest
	29, // 28: cloud.hashing.goods.v1.CloudHashingGoods.GetTargetAreas:input_type -> google.protobuf.Empty
	14, // 29: cloud.hashing.goods.v1.CloudHashingGoods.CreateDeviceInfo:input_type -> cloud.hashing.goods.v1.CreateDeviceInfoRequest
	16, // 30: cloud.hashing.goods.v1.CloudHashingGoods.UpdateDeviceInfo:input_type -> cloud.hashing.goods.v1.UpdateDeviceInfoRequest
	29, // 31: cloud.hashing.goods.v1.CloudHashingGoods.GetDeviceInfos:input_type -> google.protobuf.Empty
	20, // 32: cloud.hashing.goods.v1.CloudHashingGoods.CreateGood:input_type -> cloud.hashing.goods.v1.CreateGoodRequest
	22, // 33: cloud.hashing.goods.v1.CloudHashingGoods.UpdateGood:input_type -> cloud.hashing.goods.v1.UpdateGoodRequest
	24, // 34: cloud.hashing.goods.v1.CloudHashingGoods.GetAllGoods:input_type -> cloud.hashing.goods.v1.GetAllGoodsRequest
	27, // 35: cloud.hashing.goods.v1.CloudHashingGoods.GetGoods:input_type -> cloud.hashing.goods.v1.GetGoodsRequest
	0,  // 36: cloud.hashing.goods.v1.CloudHashingGoods.Version:output_type -> cloud.hashing.goods.v1.VersionResponse
	3,  // 37: cloud.hashing.goods.v1.CloudHashingGoods.CreateVendorLocation:output_type -> cloud.hashing.goods.v1.CreateVendorLocationResponse
	5,  // 38: cloud.hashing.goods.v1.CloudHashingGoods.UpdateVendorLocation:output_type -> cloud.hashing.goods.v1.UpdateVendorLocationResponse
	6,  // 39: cloud.hashing.goods.v1.CloudHashingGoods.GetVendorLocations:output_type -> cloud.hashing.goods.v1.GetVendorLocationsResponse
	9,  // 40: cloud.hashing.goods.v1.CloudHashingGoods.CreateTargetArea:output_type -> cloud.hashing.goods.v1.CreateTargetAreaResponse
	11, // 41: cloud.hashing.goods.v1.CloudHashingGoods.UpdateTargetArea:output_type -> cloud.hashing.goods.v1.UpdateTargetAreaResponse
	12, // 42: cloud.hashing.goods.v1.CloudHashingGoods.GetTargetAreas:output_type -> cloud.hashing.goods.v1.GetTargetAreasResponse
	15, // 43: cloud.hashing.goods.v1.CloudHashingGoods.CreateDeviceInfo:output_type -> cloud.hashing.goods.v1.CreateDeviceInfoResponse
	17, // 44: cloud.hashing.goods.v1.CloudHashingGoods.UpdateDeviceInfo:output_type -> cloud.hashing.goods.v1.UpdateDeviceInfoResponse
	18, // 45: cloud.hashing.goods.v1.CloudHashingGoods.GetDeviceInfos:output_type -> cloud.hashing.goods.v1.GetDeviceInfosResponse
	21, // 46: cloud.hashing.goods.v1.CloudHashingGoods.CreateGood:output_type -> cloud.hashing.goods.v1.CreateGoodResponse
	23, // 47: cloud.hashing.goods.v1.CloudHashingGoods.UpdateGood:output_type -> cloud.hashing.goods.v1.UpdateGoodResponse
	26, // 48: cloud.hashing.goods.v1.CloudHashingGoods.GetAllGoods:output_type -> cloud.hashing.goods.v1.GetAllGoodsResponse
	28, // 49: cloud.hashing.goods.v1.CloudHashingGoods.GetGoods:output_type -> cloud.hashing.goods.v1.GetGoodsResponse
	36, // [36:50] is the sub-list for method output_type
	22, // [22:36] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_npool_cloud_hashing_goods_proto_init() }
func file_npool_cloud_hashing_goods_proto_init() {
	if File_npool_cloud_hashing_goods_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_cloud_hashing_goods_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VendorLocationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVendorLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVendorLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVendorLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVendorLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVendorLocationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetAreaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTargetAreaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTargetAreaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTargetAreaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTargetAreaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTargetAreasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceInfosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGoodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGoodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodAuthInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGoodsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_cloud_hashing_goods_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGoodsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_cloud_hashing_goods_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_cloud_hashing_goods_proto_goTypes,
		DependencyIndexes: file_npool_cloud_hashing_goods_proto_depIdxs,
		MessageInfos:      file_npool_cloud_hashing_goods_proto_msgTypes,
	}.Build()
	File_npool_cloud_hashing_goods_proto = out.File
	file_npool_cloud_hashing_goods_proto_rawDesc = nil
	file_npool_cloud_hashing_goods_proto_goTypes = nil
	file_npool_cloud_hashing_goods_proto_depIdxs = nil
}
